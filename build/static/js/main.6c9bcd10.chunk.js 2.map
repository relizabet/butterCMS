{"version":3,"sources":["App.js","Components/BlogHome.js","Components/BlogPost.js","routes.js","index.js"],"names":["App","className","this","props","children","butter","Butter","BlogHome","state","loaded","page","post","list","page_size","then","resp","setState","data","params","fetchPosts","nextProps","meta","next_page","previous_page","map","to","slug","title","Component","BlogPost","retrieve","Helmet","seo_title","name","content","meta_description","featured_image","dangerouslySetInnerHTML","__html","body","Routes","path","component","ReactDOM","render","history","browserHistory","document","getElementById"],"mappings":"oKAaeA,MAbf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,2CAEF,8BACGC,KAAKC,MAAMC,e,iDCHdC,EAASC,IAAO,4CAoEPC,E,kDAhEX,WAAYJ,GAAQ,IAAD,8BACf,cAAMA,IAEDK,MAAQ,CACTC,QAAQ,GAJG,E,uDAQRC,GAAO,IAAD,OACbL,EAAOM,KAAKC,KAAK,CAACF,KAAMA,EAAMG,UAAW,KAAKC,MAAK,SAACC,GAChD,EAAKC,SAAS,CACVP,QAAQ,EACRM,KAAMA,EAAKE,Y,0CAMnB,IAAIP,EAAOR,KAAKC,MAAMe,OAAOR,MAAQ,EAErCR,KAAKiB,WAAWT,K,gDAGMU,GACtBlB,KAAKc,SAAS,CAACP,QAAQ,IAEvB,IAAIC,EAAOU,EAAUF,OAAOR,MAAQ,EAEpCR,KAAKiB,WAAWT,K,+BAIhB,GAAIR,KAAKM,MAAMC,OAAQ,CAAC,IAAD,EACkBP,KAAKM,MAAMO,KAAKM,KAA7CC,EADW,EACXA,UAAWC,EADA,EACAA,cAEnB,OACI,gCACKrB,KAAKM,MAAMO,KAAKE,KAAKO,KAAI,SAACb,GACvB,OACI,8BACI,cAAC,IAAD,CAAMc,GAAE,gBAAWd,EAAKe,MAAxB,SAAiCf,EAAKgB,SADhChB,EAAKe,SAMvB,uBAEA,gCACKH,GAAiB,cAAC,IAAD,CAAME,GAAE,aAAQF,GAAhB,kBAEjBD,GAAa,cAAC,IAAD,CAAMG,GAAE,aAAQH,GAAhB,wBAK1B,OACI,oD,GA1DOM,a,QCFjBvB,EAASC,IAAO,4CAiDPuB,E,kDA7CX,WAAY1B,GAAQ,IAAD,8BACf,cAAMA,IAEDK,MAAQ,CACTC,QAAQ,GAJG,E,iEAQG,IAAD,OACbiB,EAAOxB,KAAKC,MAAMe,OAAOQ,KAE7BrB,EAAOM,KAAKmB,SAASJ,GAAMZ,MAAK,SAACC,GAC7B,EAAKC,SAAS,CACVP,QAAQ,EACRE,KAAMI,EAAKE,KAAKA,Y,+BAMxB,GAAIf,KAAKM,MAAMC,OAAQ,CACnB,IAAME,EAAOT,KAAKM,MAAMG,KAExB,OACI,gCACI,eAACoB,EAAA,EAAD,WACI,gCAAQpB,EAAKqB,YACb,sBAAMC,KAAK,cAAcC,QAASvB,EAAKwB,mBACvC,sBAAMF,KAAK,WAAWC,QAASvB,EAAKyB,oBAGxC,6BAAKzB,EAAKgB,QACV,qBAAKU,wBAAyB,CAACC,OAAQ3B,EAAK4B,WAIpD,OACI,8C,GAvCOX,aCWRY,EAVA,SAACrC,GAAD,OACX,cAAC,IAAD,2BAAYA,GAAZ,aACI,eAAC,IAAD,CAAOsC,KAAK,IAAGC,UAAW1C,EAA1B,UACI,cAAC,IAAD,CAAY0C,UAAWnC,IACvB,cAAC,IAAD,CAAOkC,KAAK,WAAWC,UAAWnC,IAClC,cAAC,IAAD,CAAOkC,KAAK,cAAcC,UAAWb,WCNjDc,IAASC,OAEL,cAAC,EAAD,CAAQC,QAASC,MAGnBC,SAASC,eAAe,W","file":"static/js/main.6c9bcd10.chunk.js","sourcesContent":["function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>My Blog</h2>\n      </header>\n      <div>\n        {this.props.children}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport Butter from 'buttercms';\n\nconst butter = Butter('f97fe920e02ef96c54289b5b72ee04d1a8821449');\n\nclass BlogHome extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    fetchPosts(page) {\n        butter.post.list({page: page, page_size: 10}).then((resp) => {\n            this.setState({\n                loaded: true,\n                resp: resp.data\n            })\n        });\n    }\n\n    compnentWillMount() {\n        let page = this.props.params.page || 1;\n\n        this.fetchPosts(page)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({loaded: false});\n\n        let page = nextProps.params.page || 1;\n\n        this.fetchPosts(page)\n    }\n\n    render() {\n        if (this.state.loaded) {\n            const { next_page, previous_page } = this.state.resp.meta;\n\n            return (\n                <div>\n                    {this.state.resp.data.map((post) => {\n                        return (\n                            <div key={post.slug}>\n                                <Link to={`/post/${post.slug}`}>{post.title}</Link>\n                            </div>\n                        )\n                    })}\n\n                    <br />\n\n                    <div>\n                        {previous_page && <Link to={`/p/${previous_page}`}>Prev</Link>}\n\n                        {next_page && <Link to={`/p/${next_page}`}>Next</Link>}\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    Loading . . .\n                </div>\n            )\n        }\n    }\n}\n\nexport default BlogHome;","import React, { Component } from 'react';\nimport Butter from 'buttercms';\nimport { Helmet } from 'react-helmet';\n\nconst butter = Butter('f97fe920e02ef96c54289b5b72ee04d1a8821449');\n\nclass BlogPost extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    componentWillMount() {\n        let slug = this.props.params.slug;\n\n        butter.post.retrieve(slug).then((resp) => {\n            this.setState({\n                loaded: true,\n                post: resp.data.data\n            })\n        });\n    }\n\n    render() {\n        if (this.state.loaded) {\n            const post = this.state.post;\n\n            return (\n                <div>\n                    <Helmet>\n                        <title>{post.seo_title}</title>\n                        <meta name=\"description\" content={post.meta_description} />\n                        <meta name=\"og:image\" content={post.featured_image} />\n                    </Helmet>\n\n                    <h1>{post.title}</h1>\n                    <div dangerouslySetInnerHTML={{__html: post.body}} />\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    Loading\n                </div>\n            )\n        }\n    }\n}\n\nexport default BlogPost;","import React from 'react';\nimport { Router, IndexRoute, Route } from 'react-router';\n\nimport App from './App';\nimport BlogHome from './Components/BlogHome';\nimport BlogPost from './Components/BlogPost';\n\nconst Routes = (props) => (\n    <Router {...props}>\n        <Route path='/'component={App}>\n            <IndexRoute component={BlogHome} />\n            <Route path='/p/:page' component={BlogHome} />\n            <Route path='/post/:slug' component={BlogPost} />\n        </Route>\n    </Router>\n);\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { browserHistory } from 'react-router';\n\nimport Routes from './routes';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Routes history={browserHistory} />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}